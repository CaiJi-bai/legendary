需求分析：

基本的编辑功能：
	编辑文件的管理：支持工程文件的打开，新建，保存，另存为
		工程文件，对各个代码文件的编辑状态存储及管理。
		向工程新建，添加项目的代码文本
	基本文本处理: 复制， 粘贴，查找（支持正则表达式的模式匹配） ，替换， 撤销， 重
做
	基本的代码编辑功能：
　　语法高亮：对不同类型的token进行上色
关键字补全： 根据汇编的关键字列表，以及用户创建的标号，对每个token的不
完全输入生成一个补全列表，用户可交互性的选择补全选项
	基本的代码语法检查：
　　短上下文的语法检查（一行的范围），出错后对该行进行高亮显示
　　
程序的运行调试功能：
　　根据工程文件包含的代码文件自动进行编译连接执行，能够返回编译连接执行时的各种
信息。
　　可交互式的对编写的代码程序添加断点，单步执行，暂停，继续等debug操作
　　单步执行时，显示各个寄存器的数据，以及用户可以选择，进行内存的数据的输出显示


模块划分：
	前端界面，负责展示数据，以及接受用户的交互数据传递给控制层。
控制层：接受用户的交互数据，根据功能逻辑从后端获取、修改数据，需要时返回前端
进行展示。
数据后端：数据后端分为几部分：
	代码编辑：自动补全 语法提示 语法高亮对代码文件结构的扫描和编辑状态的保存
	项目结构：每个项目包含的文件 代码文件中加入的断点、项目文件之间的结构等
运行时虚拟环境连接：编译执行debug时和模拟器进行交互，获取模拟器运行时
程序的各种数据。
开发语言：
	Java  交互时可能会有c++

项目难点：
	在进行语法高亮，补全，语法错误提示时对代码文件实时分析
	代码运行时与模拟器的实时交互。对模拟器返回的数据进行解析，结构化管理，便于前
端的获取

Scrum原因：
	民主式的开发流程，每个人的能力都能被充分运用。
	探索性的开发，快速试错，快速迭代。
